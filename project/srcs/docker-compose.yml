version: '3'
services:

  mariadb:
      ports: 
          - ${DB_PORT}:${DB_PORT}
      build: $ABSOLUTE_PATH/requirements/mariadb
      image: $DB_IMAGE_NAME
      container_name: $DB_CONTAINER_NAME
      env_file: 
          - .env
      networks:
          - $NETWORK_NAME
      volumes:
          - inception_mariadb_volume:/var/lib/mysql
      restart: always

  nginx:
    container_name: nginx
    networks:
     - inception #which network he is a part of
    depends_on:
      - wordpress #wait for wordpress to be started to start
    build:
      context: ./requirements/nginx/. #where the dockerfile is
      dockerfile: Dockerfile
    env_file: .env
    ports:
      - "443:443" #port exposed to the local machine
    volumes:
      - wordpress:/var/www/html
    restart: on-failure #redemarre en cas de crash

  wordpress:
    container_name: wordpress
    env_file: .env
    volumes:
      - wordpress:/var/www/wordpress
    networks:
      - inception
    build:
      context: ./requirements/wordpress/.
      dockerfile: Dockerfile
    depends_on: # wordpress needs to wait for the database to be init
      - mariadb
    restart: on-failure

volumes:
    inception_mariadb_volume:
        driver: local
        driver_opts:
            o: bind
            type: none
            device: $ABSOLUTE_PATH$DB_VOLUME_PATH
        name: $DB_VOLUME_NAME

    inception_wordpress_volume:
        driver: local
        driver_opts:
            o: bind
            type: none
            device: $ABSOLUTE_PATH$WP_VOLUME_PATH
        name: $WP_VOLUME_NAME

networks:
  inception:
    name: $NETWORK_NAME
    driver: bridge #automatic docker config to make the containers communicate in bridge
